# Name of the application.
applicationName: "frontend-shopnow"

namespaceOverride: "shopnow"

# These labels will be added on all resources, and you can add additional labels from below on individual resource
labels:
  group: com.ndthang.group
  team: ndthang
deployment:
  enabled: true
  dnsConfig:
    options:
      - name: ndots
        value: "1"
  dnsPolicy: ClusterFirst
  # By default deploymentStrategy is set to rollingUpdate with maxSurge of 25% and maxUnavailable of 25%
  # You can change type to `Recreate` or can uncomment `rollingUpdate` specification and adjust them to your usage.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  # Reload deployment if configMap/secret updates
  reloadOnChange: true

  # Replicas to be created
  replicas: 1
  env:
    REACT_APP_BASE_API_URL: "http://api-shopnow.ndthang.live/api/"

  containerSecurityContext:
    capabilities:
      add: ["NET_BIND_SERVICE"]

  # Image of the app container
  image:
    repository: harbor.rnd.com/shopnow/frontend
    tag: v6
    pullPolicy: IfNotPresent

  # Secrets used to pull image
  imagePullSecrets:
    - name: shopnow-registry-secret

  # Resources to be defined for pod
  resources:
    limits:
      memory: 256Mi
      cpu: 0.5
    requests:
      memory: 128Mi
      cpu: 0.1

  # Command for primary container
  command: []

  # Args for primary contaner
  args: []

  # List of ports for the primary container
  ports:
    - containerPort: 80
      name: http
      protocol: TCP

  # Networking using the host network
  hostNetwork: true

  openshiftOAuthProxy:
    enabled: false
    port: 8080
    secretName: "openshift-oauth-proxy-tls"

  # Startup, Readiness and Liveness probes
  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
    httpGet:
      path: "/path"
      port: 8080
    exec: {}

  readinessProbe:
    enabled: false
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 10
    exec:
      command:
        - cat
        - tmp/healthy

  livenessProbe:
    enabled: false
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 10
    httpGet:
      path: /path
      port: 8080

# Service object for servicing pods
service:
  enabled: true
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 80
  type: ClusterIP

# Ingress object for exposing services
ingress:
  enabled: true

  # Name of the ingress class
  ingressClassName: nginx

  # List of host addresses to be exposed by this Ingress

  hosts:
    - host: "{{ .Release.Name }}.ndthang.live"
      paths:
        - path: /
          pathType: "Prefix"
          serviceName: "frontend-shopnow"
          servicePort: 80

# Additional ConfigMaps
configMap:
  enabled: false
  additionalLabels:
    key: value
  annotations:
    # key: value
  files:
    code-config:
      key1: value1
      key2: value2
    dev-config:
      key1: value1
      key2: value2

# Add Storage volumes to the pods
persistence:
  enabled: false
  mountPVC: false
  mountPath: "/"
  name: ""
  accessMode: ReadWriteOnce
  ## If defined, storageClass: <storageClass>
  ## If set to "-", storageClass: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClass spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "-"
  additionalLabels:
    key: "value"

  annotations:
  #  "helm.sh/resource-policy": keep
  storageSize: 8Gi
  volumeMode: "Filesystem"
  volumeName: ""

# autoscaling is used for horizonal pod autoscaling
autoscaling:
  # enabled is a boolean flag for enabling or disabling autoscaling
  enabled: false
  # additionalLabels defines additional labels
  additionalLabels:
    key: value
  # annotations defines annotations in key value pair
  annotations:
    # key: value
  # minReplicas sets the minimum number of replicas
  minReplicas: 1
  # maxReplicas sets the maximum number of replicas
  maxReplicas: 10
  # metrics is the list of metrics used for hpa
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60
