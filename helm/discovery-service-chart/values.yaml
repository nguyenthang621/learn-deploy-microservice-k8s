# Name of the application.
applicationName: "discovery-server-shopnow"

namespaceOverride: "shopnow"

# These labels will be added on all resources, and you can add additional labels from below on individual resource
labels:
  group: com.ndthang.group
  team: ndthang
deployment:
  enabled: true
  dnsConfig:
    options:
      - name: ndots
        value: "1"
  dnsPolicy: ClusterFirst
  # By default deploymentStrategy is set to rollingUpdate with maxSurge of 25% and maxUnavailable of 25%
  # You can change type to `Recreate` or can uncomment `rollingUpdate` specification and adjust them to your usage.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  # Reload deployment if configMap/secret updates
  reloadOnChange: true

  # Replicas to be created
  replicas: 1

  containerSecurityContext:
    capabilities:
      add: ["NET_BIND_SERVICE"]

  # Image of the app container
  image:
    repository: harbor.rnd.com/shopnow/discovery-server
    tag: v1
    pullPolicy: IfNotPresent

  # Secrets used to pull image
  imagePullSecrets:
    - name: shopnow-registry-secret

  # Resources to be defined for pod
  resources:
    limits:
      memory: 256Mi
      cpu: 0.5
    requests:
      memory: 128Mi
      cpu: 0.1

  # Command for primary container
  command: []

  # Args for primary contaner
  args: []

  # List of ports for the primary container
  ports:
    - containerPort: 80
      name: http
      protocol: TCP

  # Networking using the host network
  hostNetwork: true

  volumeMounts:
    shopnow-discovery-server-volume:
      mountPath: /app/src/main/resources/application.properties
      subPath: application.properties
  volumes:
    shopnow-discovery-server-volume:
      configMap:
        name: "discovery-server-shopnow-discovery-server-shopnow-config"

# Additional ConfigMaps
configMap:
  enabled: true
  files:
    discovery-server-shopnow-config: # This will become the ConfigMap name
      application.properties: |
        spring.application.name=discovery-server
        server.port=8761
        eureka.client.register-with-eureka=false
        eureka.client.fetch-registry=false

# Service object for servicing pods
service:
  enabled: true
  type: ClusterIP
  ports:
    - name: tcp
      port: 8761
      protocol: TCP
      targetPort: 8761
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  sessionAffinity: None

# Ingress object for exposing services
ingress:
  enabled: true

  # Name of the ingress class
  ingressClassName: nginx

  # List of host addresses to be exposed by this Ingress

  hosts:
    - host: "{{ .Release.Name }}.ndthang.live"
      paths:
        - path: /
          pathType: "Prefix"
          serviceName: "discovery-server-shopnow"
          servicePort: 8761
