{{ if hasKey .Values "job" }}
{{- if (.Values.job).enabled }}
{{- range $name, $job := .Values.job.jobs }}
---
{{ if $.Capabilities.APIVersions.Has "batch/v1/Job" -}}
apiVersion: batch/v1
{{- else -}}
apiVersion: batch/v1beta1
{{- end }}
kind: Job
metadata:
  labels:
  {{- include "application.labels" $ | nindent 4 }}
{{- if $job.additionalLabels }}
{{ toYaml $job.additionalLabels | indent 4 }}
{{- end }}
{{- if $job.annotations }}
  annotations:
{{ toYaml $job.annotations | indent 4 }}
{{- end }}
  name: {{ $name }}
  namespace: {{ template "application.namespace" $ }}
spec:
  {{- with $job.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ . }}
  {{- end }}
  {{- if not (kindIs "invalid" $job.backoffLimit) }}
  backoffLimit: {{ $job.backoffLimit }}
  {{- end }}
  template:
    metadata:
      labels:
      {{- include "application.labels" $ | nindent 8 }}
      {{- with $job.additionalPodLabels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $job.additionalPodAnnotations }}
      annotations:
{{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if $.Values.rbac.enabled }}
      {{- if $.Values.rbac.serviceAccount.name }}
      serviceAccountName: {{ $.Values.rbac.serviceAccount.name }}
      {{- else }}
      serviceAccountName: {{ template "application.name" $ }}
      {{- end }}
      {{- end }}
      containers:
      - name: {{ $name }}
        {{- $image := required (print "Undefined image repo for container '" $name "'") $job.image.repository }}
        {{- with $job.image.tag }} {{- $image = print $image ":" . }} {{- end }}
        {{- with $job.image.digest }} {{- $image = print $image "@" . }} {{- end }}
        image: {{ $image | quote }}
        {{- with $job.image.imagePullPolicy }}
        imagePullPolicy: {{ . }}
        {{- end }}
        {{- with $job.env }}
        env:
        {{- range $env := . }}
        - name: {{ $env.name | quote }}
          value: {{ $env.value | quote }}
        {{- end }}
        {{- end }}
        {{- with $job.envFrom }}
        envFrom:
{{ toYaml . | indent 8 }}
        {{- end }}
        {{- with $job.command }}
        command:
        {{- range . }}
        - {{ . | quote }}
        {{- end }}
        {{- end }}
        {{- with $job.args }}
        args:
        {{- if kindIs "string" . }}
        - {{ . | quote }}
        {{- else }}
{{ toYaml . | indent 8 }}
        {{- end }}
        {{- end }}
        {{- with $job.resources }}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{- with $job.volumeMounts }}
        volumeMounts:
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with $job.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with $job.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with $job.tolerations }}
      tolerations:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $job.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $job.securityContext }}
      securityContext:
{{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with $job.restartPolicy }}
      restartPolicy: {{ . }}
      {{- else }}
      restartPolicy: OnFailure
      {{- end }}
      {{- with $job.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if $job.dnsConfig }}
      dnsConfig:
{{ toYaml $job.dnsConfig | indent 8 }}
      {{- end }}
      {{- with $job.dnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      {{- with $job.volumes }}
      volumes:
{{ toYaml . | indent 8 }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}