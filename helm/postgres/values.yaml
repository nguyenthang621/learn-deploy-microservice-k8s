namespace: shopnow

# Cấu hình dependency pvc
pvc:
  enabled: true
  pvName: "postgres-volume"
  pvcName: "postgres-volume-claim"
  type: "local"
  app: "postgres"
  pvStorageSize: "10Gi"
  storageSize: "5Gi"
  accessMode: "ReadWriteMany"
  storageClass: "nfs-storage"
  reclaimPolicy: "Retain"
  nfs:
    path: "/mountdata/gluster/postgresql"
    server: "192.168.10.155"

# Cấu hình cho PostgreSQL (Bitnami style)
architecture: standalone
replicaCount: 1

global:
  postgresql:
    auth:
      enablePostgresUser: true
      postgresPassword: "abcd456789"
      username: "postgres"
      password: "admin"
      database: "postgres"
      existingSecret: ""
      secretKeys:
        adminPasswordKey: ""
        userPasswordKey: ""
        replicationPasswordKey: ""

primary:
  persistence:
    enabled: true
    existingClaim: "postgres-volume-claim"
    mountPath: /bitnami/postgresql
    accessModes:
      - ReadWriteMany
    size: 5Gi
  podManagementPolicy: "OrderedReady"
  terminationGracePeriodSeconds: 60
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1"

  volumePermissions:
    enabled: true

# CronJob backup
extraDeploy:
  - apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: postgresql-backup
      namespace: shopnow
    spec:
      schedule: "*/10 * * * *" # Backup evry 10 minutes
      successfulJobsHistoryLimit: 3 # Giới hạn số job thành công lưu lại
      failedJobsHistoryLimit: 1 # Giới hạn số job thất bại lưu lại
      jobTemplate:
        spec:
          template:
            spec:
              containers:
                - name: backup
                  image: bitnami/postgresql:17.4.0-debian-12-r8 # check ver in values postgresql
                  command:
                    - /bin/sh
                    - -c
                    - |
                      pg_dump -U postgres -h postgresql.shopnow.svc.cluster.local postgres -F c -b -v | \
                      tee /backup-dest/backup-latest.dump > /backup-dest/backup-$(date +%Y%m%d-%H%M).dump
                  env:
                    - name: PGPASSWORD
                      value: "abcd456789"
                  volumeMounts:
                    - name: backup-dest
                      mountPath: /backup-dest
              restartPolicy: OnFailure
              volumes:
                - name: backup-dest
                  persistentVolumeClaim:
                    claimName: backup-postgresql-pvc # PVC để lưu trữ backup lâu dài

# backup:
#   ## @param backup.enabled Enable the logical dump of the database "regularly"
#   enabled: true
#   cronjob:
#     schedule: "@daily"
#     ## @param backup.cronjob.timeZone Set the cronjob parameter timeZone
#     timeZone: ""
#     concurrencyPolicy: Allow
#     failedJobsHistoryLimit: 1
#     successfulJobsHistoryLimit: 3
#     startingDeadlineSeconds: ""
#     ttlSecondsAfterFinished: ""
#     restartPolicy: OnFailure
#     podSecurityContext:
#       enabled: true
#       fsGroupChangePolicy: Always
#       sysctls: []
#       supplementalGroups: []
#       fsGroup: 1001

#     containerSecurityContext:
#       enabled: true
#       seLinuxOptions: {}
#       runAsUser: 1001
#       runAsGroup: 1001
#       runAsNonRoot: true
#       privileged: false
#       readOnlyRootFilesystem: true
#       allowPrivilegeEscalation: false
#       capabilities:
#         drop: ["ALL"]
#       seccompProfile:
#         type: "RuntimeDefault"
#     ## @param backup.cronjob.command Set backup container's command to run
#     command:
#       - /bin/sh
#       - -c
#       - "pg_dumpall --clean --if-exists --load-via-partition-root --quote-all-identifiers --no-password --file=${PGDUMP_DIR}/pg_dumpall-$(date '+%Y-%m-%d-%H-%M').pgdump"
#     storage:
#       enabled: true
#       existingClaim: "backup-postgresql-pvc"
#       storageClass: "nfs-storage"
#       accessModes:
#         - ReadWriteOnce
#       mountPath: /backup/pgdump
#       size: 5Gi
#       subPath: ""
